# Generated by Django 5.2.1 on 2025-05-29 04:00

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('marketing_app', '0002_initial'),
        ('productos_app', '0004_remove_producto_stock'),
    ]

    operations = [
        migrations.CreateModel(
            name='PromocionCondicion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_objetivo', models.CharField(choices=[('PRODUCTO', 'Producto Específico'), ('CATEGORIA', 'Categoría de Productos'), ('MARCA', 'Marca de Productos')], max_length=20)),
                ('cantidad_minima_aplicable', models.PositiveIntegerField(default=1, help_text='Cantidad mínima del objetivo (producto/categoría/marca) para que esta condición se cumpla.')),
            ],
            options={
                'verbose_name': 'Condición de Promoción',
                'verbose_name_plural': 'Condiciones de Promoción',
                'db_table': 'promocion_condicion',
            },
        ),
        migrations.CreateModel(
            name='PromocionRestriccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_restriccion', models.CharField(choices=[('MONTO_MINIMO_COMPRA', 'Monto Mínimo de Compra Total'), ('MAX_USOS_POR_CLIENTE', 'Máximo de Usos por Cliente'), ('MAX_USOS_TOTALES', 'Máximo de Usos Totales de la Promoción')], max_length=30)),
                ('valor_monto', models.DecimalField(blank=True, decimal_places=2, help_text='Valor para MONTO_MINIMO_COMPRA.', max_digits=10, null=True)),
                ('valor_entero', models.PositiveIntegerField(blank=True, help_text='Valor para MAX_USOS.', null=True)),
            ],
            options={
                'verbose_name': 'Restricción de Promoción',
                'verbose_name_plural': 'Restricciones de Promoción',
                'db_table': 'promocion_restriccion',
            },
        ),
        migrations.AlterModelOptions(
            name='promocion',
            options={'ordering': ['prioridad', '-fecha_inicio'], 'verbose_name': 'Promoción', 'verbose_name_plural': 'Promociones'},
        ),
        migrations.RemoveIndex(
            model_name='promocion',
            name='promocion_activa_04e7f0_idx',
        ),
        migrations.RemoveField(
            model_name='promocion',
            name='activa',
        ),
        migrations.RemoveField(
            model_name='promocion',
            name='cantidad_minima_productos',
        ),
        migrations.RemoveField(
            model_name='promocion',
            name='porcentaje_descuento',
        ),
        migrations.AddField(
            model_name='promocion',
            name='activo',
            field=models.BooleanField(default=True, help_text='Booleano para activar/desactivar la promoción'),
        ),
        migrations.AddField(
            model_name='promocion',
            name='nombre',
            field=models.CharField(default='Promoción sin nombre', help_text='Nombre descriptivo de la promoción', max_length=255),
        ),
        migrations.AddField(
            model_name='promocion',
            name='prioridad',
            field=models.IntegerField(default=0, help_text='Orden de aplicación si hay múltiples promociones aplicables (menor número = mayor prioridad)'),
        ),
        migrations.AddField(
            model_name='promocion',
            name='tipo_aplicacion',
            field=models.CharField(choices=[('PRODUCTO_ESPECIFICO', 'Producto Específico'), ('CATEGORIA', 'Categoría Completa'), ('MARCA', 'Marca Completa'), ('CARRITO', 'Total del Carrito')], default='PRODUCTO_ESPECIFICO', max_length=30),
        ),
        migrations.AddField(
            model_name='promocion',
            name='tipo_descuento',
            field=models.CharField(choices=[('PORCENTAJE', '%'), ('MONTO_FIJO', '$')], default='PORCENTAJE', max_length=20),
        ),
        migrations.AddField(
            model_name='promocion',
            name='valor_descuento',
            field=models.DecimalField(decimal_places=2, default=0.0, help_text='Valor del descuento (porcentaje o monto fijo)', max_digits=10),
        ),
        migrations.AddIndex(
            model_name='promocion',
            index=models.Index(fields=['activo', 'fecha_inicio', 'fecha_fin'], name='promocion_activo_b4d901_idx'),
        ),
        migrations.AddIndex(
            model_name='promocion',
            index=models.Index(fields=['tipo_aplicacion'], name='promocion_tipo_ap_d0a6c7_idx'),
        ),
        migrations.AddField(
            model_name='promocioncondicion',
            name='categoria_objetivo',
            field=models.ForeignKey(blank=True, help_text='Categoría de productos a la que aplica la condición.', null=True, on_delete=django.db.models.deletion.CASCADE, to='productos_app.categoria'),
        ),
        migrations.AddField(
            model_name='promocioncondicion',
            name='marca_objetivo',
            field=models.ForeignKey(blank=True, help_text='Marca de productos a la que aplica la condición.', null=True, on_delete=django.db.models.deletion.CASCADE, to='productos_app.marca'),
        ),
        migrations.AddField(
            model_name='promocioncondicion',
            name='producto_objetivo',
            field=models.ForeignKey(blank=True, help_text='Producto específico al que aplica la condición.', null=True, on_delete=django.db.models.deletion.CASCADE, to='productos_app.producto'),
        ),
        migrations.AddField(
            model_name='promocioncondicion',
            name='promocion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='condiciones', to='marketing_app.promocion'),
        ),
        migrations.AddField(
            model_name='promocionrestriccion',
            name='promocion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restricciones', to='marketing_app.promocion'),
        ),
        migrations.AlterUniqueTogether(
            name='promocionrestriccion',
            unique_together={('promocion', 'tipo_restriccion')},
        ),
    ]
